//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Franka
{
    [Serializable]
    public class ElbowMsg : Message
    {
        public const string k_RosMessageName = "franka_msgs/Elbow";
        public override string RosMessageName => k_RosMessageName;

        // ## The state of the elbow
        public double[] position;
        public double[] desired_position;
        public double[] commanded_position;
        public double[] commanded_velocity;
        public double[] commanded_acceleration;

        public ElbowMsg()
        {
            this.position = new double[2];
            this.desired_position = new double[2];
            this.commanded_position = new double[2];
            this.commanded_velocity = new double[2];
            this.commanded_acceleration = new double[2];
        }

        public ElbowMsg(double[] position, double[] desired_position, double[] commanded_position, double[] commanded_velocity, double[] commanded_acceleration)
        {
            this.position = position;
            this.desired_position = desired_position;
            this.commanded_position = commanded_position;
            this.commanded_velocity = commanded_velocity;
            this.commanded_acceleration = commanded_acceleration;
        }

        public static ElbowMsg Deserialize(MessageDeserializer deserializer) => new ElbowMsg(deserializer);

        private ElbowMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.position, sizeof(double), 2);
            deserializer.Read(out this.desired_position, sizeof(double), 2);
            deserializer.Read(out this.commanded_position, sizeof(double), 2);
            deserializer.Read(out this.commanded_velocity, sizeof(double), 2);
            deserializer.Read(out this.commanded_acceleration, sizeof(double), 2);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.position);
            serializer.Write(this.desired_position);
            serializer.Write(this.commanded_position);
            serializer.Write(this.commanded_velocity);
            serializer.Write(this.commanded_acceleration);
        }

        public override string ToString()
        {
            return "ElbowMsg: " +
            "\nposition: " + System.String.Join(", ", position.ToList()) +
            "\ndesired_position: " + System.String.Join(", ", desired_position.ToList()) +
            "\ncommanded_position: " + System.String.Join(", ", commanded_position.ToList()) +
            "\ncommanded_velocity: " + System.String.Join(", ", commanded_velocity.ToList()) +
            "\ncommanded_acceleration: " + System.String.Join(", ", commanded_acceleration.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
